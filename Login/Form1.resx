<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAVFJREFUSEvt
        lblOxDAQhqdC3DdIuzQ8DDUFEu9EQ0HJa0AVJZHtHCagcGtbXgVmklnFUaKIXU+z2v2lKTy/NZ89thNY
        aQkVx2eg9bVoZNmYqw/ImCuc/Csaxlxy9QE14BdQ6sYrjCnnAd9yZn5pfbfA4KLYxfat86irMNzr+N7g
        KDrC8TtGgsW3Oduo9j86vjc4SU5w/MX5AKzdYKfeqTEFe8JgklL7mHtmL8W3ueN0gnJha0Ekscul1DHm
        P9kPnZ2a3iMQA5NqOJ0nzaGiGoJgi922RMHt9lLRrGp7n8TA9KS0tuwrjOkCYijLTZ7VSARs7SHm3th7
        hMlkrbrRWj9xLq8W5sob3IY+VNCphuDeYKXOcfyDXtTb0nphr+iXkKYHnBVqdZKMOu/UFQFdKEnscs2q
        RQPTt/neM74xZgbLxb/AeX6Kt/hCNOjvttKSCeAP+Ema5o+0fGgAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnLogin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAQRJREFUSEvt
        lD0OgkAQRvccdl5CW20sTLC3VBs9gp0X4QI21sbsj4bSzsqDGMUGv5EhaCBCBCcWvOQLO2SYF7ILqqHh
        /zkcOsq5PleCWNuDOEQ8viNELI7k5alYWP4uFpRnxSXlQdBC00bt98ev4tyZZRFqH9c71xfkw2l3bsmN
        1aP1GJljXUJu7YqbIqyDSjFmqLbbNuQLzCuQv4rpobqi9QQzaa9pds6e/1Z849kh9n/ERuZV7NypUrT2
        nlJjpqjTt81IiboPl7UzrAukRPw5rZHdV4k/qUTuQ5wcqg/SOsj/gVwhHXDHj8iKBaTEu1hISqRiQSkR
        i4WlhDFdeWlDQwalHvmELUB2UaqLAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAH8AAAB/CAYAAADGvR0TAAAABGdBTUEAALGPC/xhBQAACdhJREFUeF7t
        nQmsZEUVhtt93/ddXKImLpC4xAVjiESNaIxrFMHdZMQdA3HEBQwaUVFEBaMyCRoTnlscdeIw87rq9Lw3
        b8AnIeAwBkWJQsCZ6AMDMzDDzPOce06n+9Y93VX3vXu7b3efL/nTr1+fqlv31F2rTlW1DMMwDMMwDMMw
        DMMwDMMwDMMwDMMwDMMwDMMwDGOU7N5979aOHQ9rARyFn09rOffU7Pvy8r3EwpgKnLtnq91+Scv701Bz
        qN2oQ6hVRQdR9PscHhinZ+kovTFBrK7eHSvt1ViJF6P+h9IqOlW3ojbhwXBclq/RUHbuvB9W1EdQ10nF
        Va2/oTZk2zEawurq3fBMfy9WzM19FVWnbsIrwcnZdo0xAvBMrIxOUDmjEuBB9wwpiTFSAD6BFXAgqJBR
        az8eAB+UEhm1w5f5bygVMU6dbbeBupmbuwc6elPg+LI6groR9We8eixnn/xds02Xcz9C2athLdCZ5f1F
        BafHRe/vv0ZtwMp+HlbQfSXHPPR/545Gm1PRdh51GKXlN1h0ANgVoAYAvqo6fLD+jfo8VshjJYdyOPdE
        3OYXMY99fXmm6EzJwagE798ZOHiY9qO+UNn7+PLy/TG/s1B3SP5xtdtvkdTGuuDXudSWuisy+zoAeA7m
        f2WwvUFayfoNjHVATare7wwcO0g/y+7bdUL5c7Oxtv1QO+z+vx4APqw4tSjnLswOlFHAD57nFsqgCeD9
        ksooxbZtD0EH/qfg0KI2jfwM4wPgx0E5NO1rLSw8SFIZydCTuu7QfrmRnfEh9E7v/WJQnqKcO0NSGElw
        D12so+a2sT9U8cPo7UG5Qu3N3hiMRLw/KXBgUdS23wSc+4xavrxOEmsjCsAfFAf267rsstsEKCzM++uD
        8oXaItbGUDqdR6Gz7gqclxe9BTQJajrWytnToSxO0IgA8A7Fef1awbO+3vf5svAzyi1BOfOyVr8EvP9e
        wXF5XSSWzcL7nwTlDPUdsTQG4v3lgdPyAni7WDYLgBPV8va0JJbGQGKXz7X20tXN/PwT1PL2tCKWhgpV
        rO64rvaKZTOJtUhu3/4YsTQKdDrPV53W06JYNhOAXUqZe3LuuWJpFAB4meq0rgB+J5bNhN7ntXL39FKx
        NAp4f3zgrFBzYtlMvP95UN68aCSRMQDvjy04LK/NYtlM6Mqkl5vVbr9cLI0CAMeoTusKwItlM6EADq3c
        XbXbLxBLowANl9ac1tM/xbKZeH9DUN68AJ4klkYBjssfFih5BA+QB4p1s9i168FZ+fRyk/aPLfZgYuBB
        FJrzunqdWDYL505QytqvK8XSGAgFYurOYwF8XSybhXPfVsvb08ViaQyEBj7qzuvqxuz20CQ4pIsGiWjl
        ZQG8R6yNgdCwZ815/XLutWLdDOKX/NXW/PxTxNoYivd/Kjgvr+b0kHEk7xVB+fKiZl8jEe8/XXBgqHb7
        9WI9XqiLWStfXh8XayMK9X7FJ174B15ux/vaRzH53v8rKFeoA1lomlEC788LnKhpfG39fLnfHJSnKHoL
        MEqysPBkdN6dBWeGcu6jkmK08Dh+vUw9HbQHvbXi/dcCZ2o6jAfAuyXFaODZv4a15rGa2iYxEdA9PdZe
        zqJZND4mqerF+0+h4hVPzwJNbYqeGPgdOsXZpB+0tmy5j6SsFg7PTp0Whq5GzWqLmFjo8qk7WdPVqOMl
        ZTVQf4L3eyT/uGgKGaMiaEZs7y8tOHm4tqGOlRzWhnOvwjzafXnGRUPNbFauiuH7/1LB2XHRTNob8V37
        xdFKod95lu6NqGskfRkttbZufYDkZlQKjXdb2wHAcu4OPDNpYuYl/HsHyuPfHfwfRd3+PftdS5emJXwu
        eLiU1KgFeqCLBUqOXpfU9qBpBPAzwDmo1LeAunQke7ize/wYADgFFZsZox7xdjdISYyRwQ9lv0GN/8zn
        qV1fJCUzaoPnwImNihmXftuan3+6lNSoDO46pV6+QYsjNUU0yfN5+AxgzbqV4NwL0aF/7XPwJGgPXqWO
        kT0wSkP95byaRrxbNy4KDLkKtRkPpp/iJy2zdgnm/8vsk77z/6l/nuyqWMHjAOZ/iuyNkQzPdP2rwJll
        5dD5p2KlHl16sATZ05lL06zREDE9/zQB/MLm4UuFW/HiM1vG9VnJcX0AfE7Ju6yoNfGhkqOhwtE76b1n
        w7XS2r79EZLz2nDukZjP8Gli0nUNHkg2Vk9lcfHR6KBrA4etV5diBa6t9Y3Sle9JjGlPdkAZfdCrHC92
        pDlM095Wp0OhVLTKpfZ7v75feoQPVTzABUpeoegt5H2oMkuxXIb526tgBnWIAGxXnKSLbDudx2Vp02Lm
        SVuz2bJSoLV1Us94mjCSWFh4PH53hd8Ha2s2bevMA3C+4hxNNDz7jNyTO4dPXxbYDdJtqLNb7fazJHUe
        556Nv38FldpX8Mds+114ePmZqLQmZ4BvScoZhaJuNccUdQBt3ySp8nA7f9m2AHq2oEgfet+nz5TbR78O
        YnleISXIA/Cu7Hc9XV5kO5MAHIUOWCk4pCgKsHiDpNJJP4iqUWzELcAb0S4lMOS/sxfXz5fr4fPXsA5h
        xZ4gqYaTFuNfhc6RLQ6HDti0vgjI3T6mnvR18tL7y+meS/dRPZ+q9M1Sbw40QFPPJ9TbJMWUwy14wycy
        YJ0rKcrh/YdQaffcdN2JB9YHZAvlSHugvRmvcDPQApi2LOrl64qJ44fA1PX4YlrMIn/XCq/FN3z8Puss
        STGlUHRrfHXM2ytZOInuo869FfP7S5B/qqhb9s2S2/rgIBRa5lXbTlcr2XJyUwvAl5WdDnWaWFcHTX7I
        HTQU9j2ou5b+T79vzOyrhscCaNvtybkvifWUwYMuYoskXjuSEGhqX6euXpoLlz/rb2/nsX40ZkDb7672
        TWf3L8DJys7m1dRVNKoivhoH+eBEsZ4i4mPerpr6911qmuaBpNr+d7VNrKcEXoKExtBrO8ualXnquBdQ
        9wHrLrwNNXMpmTXh3CeVnezXLWjTrOXS6oLv/bcG+5/XuKaaqQXvf1/YwX5R3/ks4f0PCz7Iq9nrCiTD
        ETHDj3SAV4r1bABwnOqHnlYaN8XsmoitmzM1O1qClBOCWiknntj9vumLJtVFfLHo0UwwVSuxWDiKjZ9F
        AE5X/dGVc98VywkmNuhhVlecardfo/qjp3mxnGC8vynYqbxmNZY9vp7QDWI5oXBQ47CAxtldd4Z9M2xM
        4OHJbvGkLkp9x7q6Xixnk9iM3TSeYWLhGHh9x1hXi+VswtPEaX5h0XiAiYVj4fUdY832mvKxhZcHjTGY
        CGhUCkXlDNJEH9kVQPuv+aUrG9VjGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIYxvbRa/web6D2bj6JL
        iwAAAABJRU5ErkJggg==
</value>
  </data>
</root>